<%- | String  $api_host,
      Integer $api_port,
      String  $source_repo_name,
      String  $dest_repo_name,
      String  $distribution_name,
      String  $distribution_base_path
| -%>
#!/bin/bash
# 
# Managed by Puppet, do not edit manually
#
# Promote content between repositories and automatically publish
#
set -ex

#
# Variables
#
source_repo_name=<%= $source_repo_name %>
dest_repo_name=<%= $dest_repo_name %>
distribution_name=<%= $distribution_name %>
distribution_base_path=<%= $distribution_base_path %>
pulp_server=<%= $api_host %>
pulp_port=<%= $api_port %>

#
# Functions
#
function wait_until_finished {
  local task=${1}
  echo "Waiting until ${task} is finished"
  while true
  do
    local state=$(curl --netrc -s -H "Content-Type: application/json" "http://${pulp_server}:${pulp_port}${task}" | jq -r '.state')
    case ${state} in
      failed|canceled)
        echo "Task in final state: ${state}"
        exit 1
        ;;
      completed)
        echo "Task finished"
        created_resource=$(curl --netrc -s -H "Content-Type: application/json" "http://${pulp_server}:${pulp_port}${task}" | jq -r '.created_resources|.[0]')
        break
        ;;
      *)
        echo "Still waiting..."
        sleep 1
        ;;
    esac
  done
}

#
# Script prober
#
echo
echo "--------------------------------------------------"
echo "Getting packages in ${source_repo_name}"
echo "--------------------------------------------------"
echo
source_repo_version_href=$(curl -s --netrc "http://${pulp_server}:${pulp_port}/pulp/api/v3/repositories/rpm/rpm/?name=${source_repo_name}" | jq '.results|.[0]|.latest_version_href')

echo
echo "--------------------------------------------------"
echo "Getting packages in ${dest_repo_name}"
echo "--------------------------------------------------"
echo
dest_repo_href=$(curl -s --netrc "http://${pulp_server}:${pulp_port}/pulp/api/v3/repositories/rpm/rpm/?name=${dest_repo_name}" | jq '.results|.[0]|.pulp_href')

echo
echo "--------------------------------------------------"
echo "Syncing repositories"
echo "--------------------------------------------------"
echo
task_href=$(curl -s -L --netrc -X POST -H "Content-Type: application/json" "http://localhost:24817/pulp/api/v3/rpm/copy/" -d "{\"config\":[{\"source_repo_version\":\"${source_repo_version_href//'"'/''}\",\"dest_repo\":\"${dest_repo_href//'"'/''}\"}],\"dependency_solving\":true}" | jq '.task')
wait_until_finished ${task_href//'"'/''}
repo_latest_version_href=$(curl -s --netrc "http://${pulp_server}:${pulp_port}/pulp/api/v3/repositories/rpm/rpm/?name=${dest_repo_name}" | jq '.results|.[0]|.latest_version_href')

echo
echo "--------------------------------------------------"
echo "Creating publication"
echo "--------------------------------------------------"
echo
task_href=$(curl -s --netrc -L -X POST -H "Content-Type: application/json" "http://${pulp_server}:${pulp_port}/pulp/api/v3/publications/rpm/rpm/" -d "{\"repository_version\": \"${repo_latest_version_href//'"'/''}\"}" | jq '.task')
wait_until_finished ${task_href//'"'/''}
publication_href=${created_resource}

echo
echo "--------------------------------------------------"
echo "Updating distribution"
echo "--------------------------------------------------"
echo
distribution_href=$(curl -s --netrc "http://${pulp_server}:${pulp_port}/pulp/api/v3/distributions/rpm/rpm/?name=${distribution_name}" | jq '.results|.[0]|.pulp_href')
task_href=$(curl -s --netrc -L -X PUT -H "Content-Type: application/json" "http://${pulp_server}:${pulp_port}${distribution_href//'"'/''}" -d "{\"base_path\": \"${distribution_base_path}\", \"name\": \"${distribution_name}\", \"publication\": \"${publication_href//'"'/''}\"}" | jq '.task')
wait_until_finished ${task_href//'"'/''}
echo "COMPLETED SUCCESSFULLY"
